function a = ave_nan(a)
% ------------------------------------------------------------------------------
% fill nan's in a matrix by averaging values around it
% 
% diego domenzain
% @ Mines, spring 2020
% ------------------------------------------------------------------------------
[nr,nc] = size(a);
a_ = a;
% ------------------------------------------------------------------------------
while sum(isnan(a(:)))>0
 for j_=1:1:nc
  for i_=1:1:nr
   if isnan(a(i_,j_))
    nei  = find_nei(i_,j_,nr,nc);
    n_nei= numel(nei);
    b    = a(nei);
    if sum(isnan( b ))<n_nei
     b_= ~isnan(b);
     b = b(b_);
     a_(i_,j_) = sum( b ) / sum(b_);
    end
   end
  end
 end
 a=a_;
 % fprintf('   nans = %i\n',sum(isnan(a(:))))
end
end
% ------------------------------------------------------------------------------
% ------------------------------------------------------------------------------
% ------------------------------------------------------------------------------
function nei = find_nei(i_,j_,nr,nc)
% ------------------------------------------------------------------------------
% up, left, down, right neighbors
l_u = [i_-1,j_];
l_l = [i_,j_-1];
l_d = [i_+1,j_];
l_r = [i_,j_+1];
% ------------------------------------------------------------------------------
% diagonal neighbors
l_ur = [i_-1,j_+1];
l_ul = [i_-1,j_-1];
l_dl = [i_+1,j_-1];
l_dr = [i_+1,j_+1];
% ------------------------------------------------------------------------------
% l_ = [l_u;l_l;l_d;l_r];
l_ = [l_u;l_l;l_d;l_r;l_ur;l_ul;l_dl;l_dr];
% l_ = [l_u;l_d];
% ------------------------------------------------------------------------------
% remove negative index neighbors
negis = any(l_<=0, 2);
l_(negis, :) = [];
% ------------------------------------------------------------------------------
% remove excess in vertical
r_ = l_(:,1);
r_ = r_>nr;
l_(r_,:)=[];
% ------------------------------------------------------------------------------
% remove excess in horizontal
c_ = l_(:,2);
c_ = c_>nc;
l_(c_,:)=[];
% ------------------------------------------------------------------------------
nr_ = size(l_,1);
nei = zeros(nr_,1);
% ------------------------------------------------------------------------------
for i_=1:nr_
 nei(i_) = sub2ind([nr,nc],l_(i_,1),l_(i_,2));
end
% ------------------------------------------------------------------------------
end
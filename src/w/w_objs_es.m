function [Ew_,Ew__] = w_objs_es(geome_,parame_,finite_,gerjoii_,is)

% clean dc first
if isfield(gerjoii_,'dc')
  gerjoii_=rmfield(gerjoii_,'dc');
end
if isfield(parame_,'dc')
  parame_=rmfield(parame_,'dc');
end
if isfield(finite_,'dc')
  finite_=rmfield(finite_,'dc');
end
% ..............................................................................
% load source, receivers, measuring operator, observed data & std
% ..............................................................................
[parame_,gerjoii_] = w_load(parame_,gerjoii_,is);
Nw = sparse_diag(parame_.natu.w.N);
% ..............................................................................
%
%                               round 1
%
% ..............................................................................
epsi = parame_.w.epsilon; sigm = parame_.w.sigma;
% ..............................................................................
% perturb BOTH!!
% ..............................................................................
ke = gerjoii_.w.ke_*0.5;
ks = gerjoii_.w.ks_*0.5;
parame_.w.epsilon = parame_.w.epsilon .* ...
                    exp( ke*parame_.w.epsilon .* gerjoii_.w.depsilon);
parame_.w.sigma = parame_.w.sigma .* ...
                    exp( ks*parame_.w.sigma .* gerjoii_.w.dsigma);
% ..............................................................................
% fwd model
% ..............................................................................
[~,gerjoii_] = w_fwd_(geome_,parame_,finite_,gerjoii_,0);
% ..............................................................................
% obj
% ..............................................................................
Ew_ = w_E(parame_.natu.w.d_2d,gerjoii_.w.d_2d,Nw,gerjoii_.w.obj_FNC);
Ew_ = Ew_ / ( parame_.natu.w.d_2d(:).' * parame_.natu.w.d_2d(:) );
% ..............................................................................
%
%                               round 2
%
% ..............................................................................
parame_.w.epsilon = epsi; parame_.w.sigma = sigm;
% ..............................................................................
% perturb BOTH!!
% ..............................................................................
ke = gerjoii_.w.ke_;
ks = gerjoii_.w.ks_;
parame_.w.epsilon = parame_.w.epsilon .* ...
                    exp( ke*parame_.w.epsilon .* gerjoii_.w.depsilon);
parame_.w.sigma = parame_.w.sigma .* ...
                    exp( ks*parame_.w.sigma .* gerjoii_.w.dsigma);
% ..............................................................................
% fwd model
% ..............................................................................
[~,gerjoii_] = w_fwd_(geome_,parame_,finite_,gerjoii_,0);
% ..............................................................................
% obj
% ..............................................................................
Ew__ = w_E(parame_.natu.w.d_2d,gerjoii_.w.d_2d,Nw,gerjoii_.w.obj_FNC);
Ew__ = Ew__ / ( parame_.natu.w.d_2d(:).' * parame_.natu.w.d_2d(:) );
end
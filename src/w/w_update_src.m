function s = w_update_src(geome_,parame_,finite_,gerjoii_,is)
% invert for source wavelet.
% ..............................................................................
% load source, receivers, measuring operator, observed data & std
% ..............................................................................
[parame_,gerjoii_] = w_load(parame_,gerjoii_,is);
% ..............................................................................
% fwd model
% ..............................................................................
[finite_,gerjoii_] = w_fwd(geome_,parame_,finite_,gerjoii_);
% ..............................................................................
% clean up wavefield
% ..............................................................................
gerjoii_.w = rmfield(gerjoii_.w,'u_2d');
% ..............................................................................
% filter wavefields
% ..............................................................................
parame_.natu.w.d_2d = filt_gauss(parame_.natu.w.d_2d,geome_.w.dt,...
                                 gerjoii_.w.regu.f_,gerjoii_.w.regu.f__,8);%[Hz]
gerjoii_.w.d_2d = filt_gauss(gerjoii_.w.d_2d,geome_.w.dt,...
                                 gerjoii_.w.regu.f_,gerjoii_.w.regu.f__,8);%[Hz]
% ..............................................................................
% get the source 
% ..............................................................................
gaussian_ = parame_.w.gaussians_(:,is);
dt = parame_.w.dt;
s  = parame_.w.wvlets_(:,is);
d_o= parame_.natu.w.d_2d;
d  = gerjoii_.w.d_2d;
f_high = gerjoii_.w.regu.f__;
% ..............................................................................
% trim the data in case you only want to use part of it 
% ..............................................................................
if isfield(gerjoii_.w,'irx_keepx_')
   irx_keepx_ = gerjoii_.w.irx_keepx_;
   irx_keepx__= gerjoii_.w.irx_keepx__;
   
   d_o= d_o(:,irx_keepx_:irx_keepx__);
   d  = d(:,irx_keepx_:irx_keepx__);
end
% ..............................................................................
s = w_pratt_src(d,d_o,s,dt,gaussian_,f_high);
fprintf('     source for shot-gather #%i was found\n',is)
end